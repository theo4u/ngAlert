{"version":3,"sources":["/Users/theophy/dev/open-source/ngAlert/src/$_lazy_route_resource lazy","/Users/theophy/dev/open-source/ngAlert/src/app/app.component.css","/Users/theophy/dev/open-source/ngAlert/src/app/app.component.html","/Users/theophy/dev/open-source/ngAlert/src/app/app.component.ts","/Users/theophy/dev/open-source/ngAlert/src/app/app.module.ts","/Users/theophy/dev/open-source/ngAlert/src/app/modules/ng-alert/ng-alert.component.html","/Users/theophy/dev/open-source/ngAlert/src/app/modules/ng-alert/ng-alert.component.ts","/Users/theophy/dev/open-source/ngAlert/src/app/modules/ng-alert/ng-alert.module.ts","/Users/theophy/dev/open-source/ngAlert/src/app/modules/ng-alert/ng-alert.service.ts","/Users/theophy/dev/open-source/ngAlert/src/environments/environment.ts","/Users/theophy/dev/open-source/ngAlert/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/theophy/dev/open-source/ngAlert/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/theophy/dev/open-source/ngAlert/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<div style=\\\"padding: 20px;\\\">\\n\\n\\n  <!--The content below is only a placeholder and can be replaced.-->\\n  <h2>When you have an alert in a tight or small width screens</h2>\\n  <ng-alert [(message)]=\\\"message\\\" [dismissable]=\\\"true\\\"></ng-alert>\\n\\n  <h2>When you want the close button to be times</h2>\\n  <ng-alert [(message)]=\\\"message\\\" [dismissable]=\\\"true\\\" [closeType]=\\\"closeTypes.TIMES\\\"></ng-alert>\\n\\n  <h2>Message Types</h2>\\n  <p>\\n    <button (click)=\\\"showMessage('Sample message from click info', messageTypes.info)\\\">Show Message Info</button>\\n    <button (click)=\\\"showMessage('Sample message alert from click warning', messageTypes.warning)\\\">Show Message Warning</button>\\n    <button (click)=\\\"showMessage('Sample message alert from click success', messageTypes.success)\\\">Show Message Success</button>\\n    <button (click)=\\\"showMessage('Sample message alert from click error', messageTypes.error)\\\">Show Message Error</button>\\n  </p>\\n\\n  <h2>With Title </h2>\\n  <ng-alert [(message)]=\\\"message2\\\" [dismissable]=\\\"true\\\" [closeType]=\\\"closeTypes.TIMES\\\"></ng-alert>\\n\\n  <h2>App Level Alert --> which means you want all your errors to be at one central location, usually the top of your app</h2>\\n  <p>\\n    Just simply place the\\n    <code>ng-alert</code> at the top of your page and use the exposed interface.\\n    <br>\\n    <button (click)=\\\"showMessage('Sample message alert from click')\\\">Show Message</button>\\n    <button (click)=\\\"showConfirmation('<b>Are you sure!</b> you want to do this')\\\">Show Confirmation</button>\\n  </p>\\n\\n  <h2>Supports HTML content</h2>\\n  <p>\\n    <button (click)=\\\"showMessage('<b>Sample</b> bold <ul> <l1>message</li> <li>alert</li> <li>from click</li>')\\\">Show Message HTML</button>\\n  </p>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/theophy/dev/open-source/ngAlert/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { IMessage, MessageType, CloseType } from './modules/ng-alert/ng-alert.component';\nimport { OnInit, OnDestroy } from '@angular/core/src/metadata/lifecycle_hooks';\nimport { NgAlertService } from './modules/ng-alert/ng-alert.service';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  message: IMessage;\n  message2: IMessage;\n  closeTypes = CloseType;\n  messageTypes = MessageType;\n  _alertSub: Subscription;\n\n  constructor(private _ngAlert: NgAlertService) {\n    this.message = {\n      message: 'Sample message alert',\n      type: MessageType.info\n    };\n    this.message2 = {\n      message: 'Sample message alert with title',\n      title: 'This is Title',\n      type: MessageType.info\n    };\n  }\n\n  /**\n   * on Init, auto subscribed to any new message alert\n   */\n  ngOnInit() {\n    this._alertSub = this._ngAlert.getSource().subscribe(message => {\n      this.message = message;\n    });\n  }\n\n  /**\n   * unsubscribe from the alert subscription\n   */\n  ngOnDestroy() {\n    this._alertSub.unsubscribe();\n  }\n\n  /**\n   * show message with type, default to info for message type\n   * @param message\n   * @param type\n   */\n  showMessage(message: string, type: MessageType = MessageType.info) {\n    this._ngAlert.push({\n      message: message,\n      type: type\n    });\n  }\n\n  showConfirmation(message: string, type: MessageType = MessageType.warning) {\n this._ngAlert.push({\n      message: message,\n      type: type,\n   buttons: [\n     {\n       label: 'Cancel'\n     },\n     {\n       label: 'Continue',\n       css: 'continue',\n       action: () => {\n         alert('something happened');\n        console.log('someting about me');\n       }\n     }\n   ]\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/theophy/dev/open-source/ngAlert/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n\nimport { AppComponent } from './app.component';\nimport { NgAlertModule } from './modules/ng-alert/ng-alert.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    NgAlertModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/theophy/dev/open-source/ngAlert/src/app/app.module.ts","module.exports = \"<div *ngIf=\\\"message\\\" class=\\\"alert alert-{{message.type}}\\\" [ngClass]=\\\"{padding:closeType===closeTypes.TIMES}\\\">\\n  <h5 *ngIf=\\\"message.title\\\">{{message.title}}</h5>\\n  <span [innerHTML]=\\\"message.message\\\">\\n  </span>\\n  \\n  <button *ngFor=\\\"let button of message.buttons\\\" class=\\\"{{button.css}}\\\" (click)=\\\"button.action?button.action():true\\\">\\n    {{button.label}}\\n  </button>\\n\\n  <button (click)=\\\"message=null\\\" *ngIf=\\\"dismissable && closeType===closeTypes.TIMES\\\" type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\"\\n    aria-label=\\\"Close\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n  <p align=\\\"center\\\" *ngIf=\\\"dismissable && closeType===closeTypes.NORMAL\\\">\\n    <a (click)=\\\"message=null\\\">close</a>\\n  </p>\\n  \\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/theophy/dev/open-source/ngAlert/src/app/modules/ng-alert/ng-alert.component.html\n// module id = ../../../../../src/app/modules/ng-alert/ng-alert.component.html\n// module chunks = main","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nexport enum MessageType {\n  success = 'success',\n    error = 'error',\n    info = 'info',\n    warning = 'warning'\n}\n\nexport interface IMessage {\n  type: MessageType;\n  message: string;\n  title?: string;\n  buttons?: Array<{\n    label: string,\n    action?: Function,\n    css?: string\n  }>;\n}\n\nexport enum CloseType {\n  TIMES, NORMAL\n}\n\n@Component({\n  selector: 'ng-alert',\n  templateUrl: './ng-alert.component.html'\n})\nexport class NgAlertComponent {\n\n  @Input() dismissable: boolean;\n  rawMessage: IMessage;\n  @Output() messageChange = new EventEmitter();\n  @Input() closeType: CloseType = CloseType.NORMAL;\n  closeTypes = CloseType;\n\n  @Input()\n  get message(): IMessage {\n    return this.rawMessage;\n  }\n\n  set message(value: IMessage) {\n    this.rawMessage = value;\n    this.messageChange.emit(this.rawMessage);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/theophy/dev/open-source/ngAlert/src/app/modules/ng-alert/ng-alert.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgAlertComponent } from './ng-alert.component';\nimport { NgAlertService } from './ng-alert.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [NgAlertComponent],\n  exports: [\n    NgAlertComponent\n  ],\n  providers: [\n    NgAlertService\n  ]\n})\nexport class NgAlertModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/theophy/dev/open-source/ngAlert/src/app/modules/ng-alert/ng-alert.module.ts","import { Injectable } from '@angular/core';\nimport { Subject } from \"rxjs/Subject\";\nimport { IMessage } from './ng-alert.component';\n\n/**\n * this is used to handle our overall application alert --> App Level Alert\n */\n@Injectable()\nexport class NgAlertService {\n  private _messageSource = new Subject<IMessage>();\n  constructor() { }\n\n  /**\n   * this returns our alert message source\n   */\n  getSource() {\n    return this._messageSource;\n  }\n\n  /**\n   * push our message to our alert\n   * @param message \n   */\n  push(message: IMessage) {\n    this._messageSource.next(message);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/theophy/dev/open-source/ngAlert/src/app/modules/ng-alert/ng-alert.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/theophy/dev/open-source/ngAlert/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Users/theophy/dev/open-source/ngAlert/src/main.ts"],"sourceRoot":"webpack:///"}